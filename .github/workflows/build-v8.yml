name: build-v8

on:
  schedule:
    # запуск ежегодно (в 00:00, 15-го января, независимо от дня недели)
    - cron: "0 0 15 1 *"
  push:
    # запуск только при пуше в мастер
    branches:
      - "master"
    # запуск, если изменился код пакета или пайплайна
    paths:
      - ".github/workflows/**/*"

jobs:
  build-v8:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v3

      #- name: install gclient
      #  run: |
      #    git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
      #    PATH=$GITHUB_WORKSPACE/depot_tools:$PATH
      #    gclient

      #- name: download v8
      #  run: |
      #    mkdir v8-src && cd v8-src
      #    PATH=$GITHUB_WORKSPACE/depot_tools:$PATH
      #    fetch v8

      #- name: sync v8
      #  run: |
      #    cd v8-src/v8
      #    PATH=$GITHUB_WORKSPACE/depot_tools:$PATH
      #    gclient sync

      #- name: build v8
      #  run: |
      #    pwd
      #    ls -la
      #    PATH=$GITHUB_WORKSPACE/depot_tools:$PATH
      #    cd v8-src/v8
      #    ./build/install-build-deps.sh
      #    ./tools/dev/gm.py x64.release.check

      - name: get needed files for debian package
        run: |
          ### test
          unzip v8-src.zip
          rm -f v8-src.zip
          ### test
          cd ./v8-src/v8/out/x64.release
          mkdir -p "$GITHUB_WORKSPACE/v8js/topvisor/v8js"
          cp  \
            d8 \
            libchrome_zlib.so \
            libchrome_zlib.so.TOC \
            libc++.so \
            libicuuc.so \
            libicuuc.so.TOC \
            libthird_party_abseil-cpp_absl.so \
            libthird_party_abseil-cpp_absl.so.TOC \
            libthird_party_icu_icui18n.so \
            libthird_party_icu_icui18n.so.TOC \
            libv8_libbase.so \
            libv8_libbase.so.TOC \
            libv8_libplatform.so \
            libv8_libplatform.so.TOC \
            libv8.so \
            libv8.so.TOC \
            v8_build_config.json \
          --target-directory "$GITHUB_WORKSPACE/v8js/topvisor/v8js"

      #- name: change v8 version
      #  run: |

      - name: build debian package
        run: |
          dpkg-deb --build v8js

      - name: upload artifacts to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "$GITHUB_SHA" v8js.deb
